[
  {
    "objectID": "posts.html",
    "href": "posts.html",
    "title": "Blog",
    "section": "",
    "text": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance\n\n\nHow different positions have adapted to the changing landscape of NBA shooting\n\n\n\ncode\n\n\nanalysis\n\n\nNBA\n\n\n\n\n\n\n\n\n\nAug 1, 2025\n\n\nMatan Hakim\n\n\n\n\n\n\n\n\n\n\n\n\nHeight per Minute - Analyzing Height Trends in the NBA\n\n\n\n\n\n\ncode\n\n\nanalysis\n\n\nNBA\n\n\n\n\n\n\n\n\n\nSep 9, 2023\n\n\nMatan Hakim\n\n\n\n\n\n\n\n\n\n\n\n\nIntroducing rtlr - an R Package for RTL Languages\n\n\nConvenience functions to make some common tasks with right-to-left string printing easier, more convenient and with no need to remember long Unicode characters. Specifically helpful for right-to-left languages such as Arabic, Persian and Hebrew.\n\n\n\nnews\n\n\ncode\n\n\nrtlr\n\n\nRWeekly Highlights\n\n\n\n\n\n\n\n\n\nApr 5, 2023\n\n\nMatan Hakim\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/2023-04-05-rtlr-0-1-0/index.html",
    "href": "posts/2023-04-05-rtlr-0-1-0/index.html",
    "title": "Introducing rtlr - an R Package for RTL Languages",
    "section": "",
    "text": "(This blog post was chosen as a highlight for R Weekly issue 2023-W15)\nDo you know anyone who speaks Arabic, Persian or Hebrew? Do you know any R professional who speaks any of these languages? Maybe you are yourself an R professional who speaks any of these languages and uses them in your R work?\nTL;DR - You can use rtlr to fix right-to-left problems in R. install the package with install.packages(\"rtlr\") and use str_rtl() with your text as argument(s)."
  },
  {
    "objectID": "posts/2023-04-05-rtlr-0-1-0/index.html#footnotes",
    "href": "posts/2023-04-05-rtlr-0-1-0/index.html#footnotes",
    "title": "Introducing rtlr - an R Package for RTL Languages",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nhttps://www.w3.org/International/questions/qa-scripts↩︎\nFor further reading on this, see: https://unicode.org/reports/tr9/#Directional_Formatting_Characters↩︎\nThis is because \\n stops the RTL-embedding provided by \\u202B, and forces you to write this as \\n\\u202B instead.↩︎"
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "Matan Hakim - CV",
    "section": "",
    "text": "2020 - Present: Co-Founder and Head of Research, The Israeli Institute for Cultural Policy\n2022 - Present: Socio-Economic Researcher, Arlozorov Forum\n2018 - 2021: Psychometric Exam Teacher, Kidum\n2017 - 2018: Physics and Math Teacher, Atidim\n2015 - 2017: Head of Digital, Tarbut Movement"
  },
  {
    "objectID": "cv.html#open-source-contributions",
    "href": "cv.html#open-source-contributions",
    "title": "Matan Hakim - CV",
    "section": "Open Source contributions",
    "text": "Open Source contributions\n\nAuthor and maintainer of rtlr, an R package for RTL languages\nFeature development in janitor, an R package for examining and cleaning dirty data\nProofreading contributions to the open-source books:\n\nR for Data Science (2e)\nR Packages (2e)\nBuilding reproducible analytical pipelines with R"
  },
  {
    "objectID": "cv.html#publications",
    "href": "cv.html#publications",
    "title": "Matan Hakim - CV",
    "section": "Publications",
    "text": "Publications\n\nYoung People in the Labor Market in Israel (2024), Arlozorov Forum\nThe Want of Job Switching: Analysis of Situation and Trends in Israel (2024), Arlozorov Forum\nThe Israeli Guide for Cultural Mapping (2023), the Israeli Institute for Cultural Policy (under review)\nData Analysis 2011-2021 - Culture in Israel in a Regional Perspective (2023), the Israeli Institute for Cultural Policy (submitted to the Israeli Parliament)\nCulture as an Israeli Growth Driver (2020), Tarbut Movement (submitted to the Israeli Parliament)\nCultural Policy Data (2020), Tarbut Movement (submitted to the Israeli Parliament)"
  },
  {
    "objectID": "cv.html#talks",
    "href": "cv.html#talks",
    "title": "Matan Hakim - CV",
    "section": "Talks",
    "text": "Talks\n\nData on the Cultural Field in Israel (2023), presented in the Israeli Parliament, Special Committee for Strengthening and Developing the Negev and Galilee\nCultural Policy and Local Governments: Between Inequalities and Political Compensation (2022), presented in the Annual Conference of the Israeli Sociological Society\n\nA draft of this talk was also presented in the University of Haifa Young Researchers Forum of the Interdisciplinary Center for the Study of Poverty and Social Exclusion (2021)\n\nInequality in Israel (2020), presented in the Balfur Protest Organization Meeting\nChristian Motives in “Kehilyatenu” (2020), presented in the Annual Conference of the Israeli Labor Movement Research Forum\nThe Privatization of the Israeli Pension System (2017), Beit Berl Academic College"
  },
  {
    "objectID": "cv.html#footnotes",
    "href": "cv.html#footnotes",
    "title": "Matan Hakim - CV",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nSee this TheMarker news article↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Matan Hakim - Policy Data Scientist",
    "section": "",
    "text": "Head of Research at the Israeli Institute for Cultural Policy.\nI lead projects in data science, research, analytics, and social and economic policy."
  },
  {
    "objectID": "posts/2023-09-09-nba-heights/index.html#setup",
    "href": "posts/2023-09-09-nba-heights/index.html#setup",
    "title": "Height per Minute - Analyzing Height Trends in the NBA",
    "section": "Setup",
    "text": "Setup\nLet’s load the relevant packages.\n\nlibrary(tidyverse)\nlibrary(rvest)\nlibrary(janitor)\nlibrary(scales)\nlibrary(jtools)\nlibrary(gganimate)\nlibrary(conflicted)\nconflicts_prefer(dplyr::filter())"
  },
  {
    "objectID": "posts/2023-09-09-nba-heights/index.html#import-data",
    "href": "posts/2023-09-09-nba-heights/index.html#import-data",
    "title": "Height per Minute - Analyzing Height Trends in the NBA",
    "section": "Import data",
    "text": "Import data\n\nTotal minutes played for every player in every season\nLet’s start by defining a function to read the data on every player on a specific season. This is where the “minutes played” stat comes from, so it’s important. This function scrapes the Basketball Reference website using the rvest package, and returns a tibble of every player’s name registered in that season, alongside its position, age, and minutes played. You’ll see why position and age matter in a minute!\n\nread_season &lt;- function(year) {\n1  Sys.sleep(4)\n  read_html(str_c(\"https://www.basketball-reference.com/leagues/NBA_\", year, \"_totals.html\")) |&gt; \n    html_element(\"table\") |&gt; \n    html_table() |&gt; \n    clean_names() |&gt; \n2    filter(str_detect(rk, \"[:digit:]\")) |&gt;\n    select(player, pos, age, mp)\n}\n\n\n1\n\nPause between requests to avoid hitting the rate limit of 20 requests in a minute.\n\n2\n\nRemove repeating header rows.\n\n\n\n\nAfter defining our function, let’s map it over every season, starting from 1952.\n\ndf_seasons_raw &lt;- tibble(year = 1952:2023) |&gt;\n  mutate(data = map(year, read_season)) |&gt;\n  unnest(data)\n\n\n\nAll players\nIn our previously collected data set we don’t have any data on the players’ heights! So, we need to collect this for every player to ever play in the league. This function reads data for all players whos family name starts with the same letter. it returns a tibble with player name, NBA carreer first and last year, height, position, birth date and college.\n\nread_players_letter &lt;- function(letter) {\n1  Sys.sleep(4)\n  read_html(str_c(\"https://www.basketball-reference.com/players/\", letter)) |&gt; \n    html_element(\"table\") |&gt; \n    html_table() |&gt; \n    clean_names() |&gt; \n2    filter(str_detect(from, \"[:digit:]\")) |&gt;\n3    mutate(player = str_remove_all(player, \"\\\\*\"))\n}\n\n\n1\n\nPause between requests to avoid hitting the rate limit of 20 requests in a minute.\n\n2\n\nRemove repeating header rows.\n\n3\n\nRemove asterisk from player name (indicating members of the Hall of Fame).\n\n\n\n\nNow, let’s map this function over every letter (besides “x”, a letter with no NBA players family names) to create our data set.\n\nletters_no_x &lt;- letters[letters != \"x\"]\ndf_players_raw &lt;- map(letters_no_x, read_players_letter) |&gt;\n  list_rbind()"
  },
  {
    "objectID": "posts/2023-09-09-nba-heights/index.html#manipulate-data",
    "href": "posts/2023-09-09-nba-heights/index.html#manipulate-data",
    "title": "Height per Minute - Analyzing Height Trends in the NBA",
    "section": "Manipulate data",
    "text": "Manipulate data\n\nJoin data frames\nIf we have tried joining the two data sets, we would encounter a problem: some NBA players have the same name! Let’s see this:\n\ndf_players_raw |&gt; \n  count(player, sort = TRUE) |&gt; \n  head(n = 10) |&gt; \n  knitr::kable()\n\n\n\n\nplayer\nn\n\n\n\n\nCharles Jones\n3\n\n\nCharles Smith\n3\n\n\nGeorge Johnson\n3\n\n\nBill Bradley\n2\n\n\nBob Duffy\n2\n\n\nBobby Jones\n2\n\n\nBobby Wilson\n2\n\n\nBrandon Williams\n2\n\n\nCedric Henderson\n2\n\n\nChris Johnson\n2\n\n\n\n\n\nWe have 3 different players for each of Charles Jones, Charles Smith, and George Johnson! We need to come up with a way to differentiate between them. This is where birth date comes in.\n\ndf_players &lt;- df_players_raw |&gt; \n1  separate(ht, into = c(\"ht_feet\", \"ht_inches\"), sep = \"-\", remove = FALSE) |&gt;\n  mutate(\n2    ht_tot_inches = parse_double(ht_feet) * 12 + parse_double(ht_inches),\n    ht_tot_cm = ht_tot_inches * 2.54,\n3    birth_date = parse_date_time(birth_date, \"bdy\"),\n    birth_year = year(birth_date),\n4    birth_year_effective = if_else(\n      month(birth_date) &gt; 1,\n      birth_year + 1,\n      birth_year\n    )\n  )\n\n\n1\n\nSeparate height to feet and inches.\n\n2\n\nCalculate total height.\n\n3\n\nextract birth year from birth date.\n\n4\n\nCalculate effective birth year - the player’s age shown is its age during February 1st of that season.\n\n\n\n\n\ndf_seasons &lt;- df_seasons_raw |&gt; \n  mutate(\n1    player = str_remove_all(player, \"\\\\*\"),\n    birth_year_effective = year - age\n  )\n\n\n1\n\nRemove asterisk from player name (indicating members of the Hall of Fame).\n\n\n\n\nNow we’re ready to join the data sets by name and by birth year.\n\ndf_all &lt;- df_seasons |&gt; \n  left_join(df_players, join_by(player, birth_year_effective)) |&gt; \n  mutate(\n1    decade = (year - year %% 10) |&gt;\n      factor() |&gt;\n      str_c(\"'s\")\n  )\n\n\n1\n\nCalculate decade, turn it to a factor and add an “’s” prefix.\n\n\n\n\n\n\nCalculate (weighted) mean height\nLet’s define a function to calculate a weighted mean height by one or more variables.\n\nweighted_mean_by &lt;- function(data, mean_var, by_vars, weights) {\n  data |&gt; \n1    group_by({{ by_vars }}) |&gt;\n    summarise(\n      mean = weighted.mean({{ mean_var }}, {{ weights }}),\n      sd = wtd.sd({{ mean_var }}, {{ weights }}),\n      sd_upper = mean + sd,\n      sd_lower = mean - sd,\n      .groups = \"drop\"\n    )\n}\n\n\n1\n\nThe double curly brackets use the idea of “tidy evaluation”. for more on this, go to R4DS (2e)\n\n\n\n\nLet’s calculate these stats for every year and for every decade.\n\ndf_mean_years &lt;- df_all |&gt; \n  weighted_mean_by(ht_tot_inches, year, mp)\n\ndf_mean_decades &lt;- df_all |&gt; \n  weighted_mean_by(ht_tot_inches, decade, mp)\n\n\n\nCalculate (weighted) frequency by minutes played\nNow, Let’s get to the heart of this analysis. We’ll define a function that takes all of the NBA players, and calculates the weighted relative frequency of every height for a specific period. In simpler words, it computes the percent of minutes played by every height during a year or a decade.\n\nsummarize_heigths &lt;- function(data, var, by_vars, weights = NULL) {\n  data |&gt; \n    count({{ by_vars }}, {{ var }}, wt = {{ weights }}) |&gt; \n    mutate(\n      .by = {{ by_vars }},\n      pct = n / sum(n),\n    )\n}\n\ndf_heights_years &lt;- df_all |&gt; \n  summarize_heigths(ht_tot_inches, by_vars = year, weights = mp)\n\ndf_heights_decades &lt;- df_all |&gt;\n  summarize_heigths(ht_tot_inches, by_vars = decade, weights = mp)"
  },
  {
    "objectID": "posts/2023-09-09-nba-heights/index.html#visualization",
    "href": "posts/2023-09-09-nba-heights/index.html#visualization",
    "title": "Height per Minute - Analyzing Height Trends in the NBA",
    "section": "Visualization",
    "text": "Visualization\n\nUtility functions\nThis function converts a height from inches only (which is better for computation) to a feet-inches format (which is better for presentation).\n\ninches_to_feet &lt;- function(x) {\n  str_c(\n    x %/% 12,\n    x %% 12,\n    sep = \"-\"\n  )\n}\n\nThese will serve us for more reasonable axes labels.\n\nbreaks_height &lt;- (23:29) * 3\nlabels_height &lt;- inches_to_feet(breaks_height)\n\n\n\nMean height by year\n\np1 &lt;- df_mean_years |&gt; \n  ggplot(aes(year, mean)) +\n  geom_line() +\n  geom_point() + \n  scale_y_continuous(labels = inches_to_feet) +\n  scale_x_continuous(breaks = seq(1950, 2020, 10)) +\n  labs(\n    title = \"NBA players' average height has dropped over the last 20 years\",\n    subtitle = \"2023 featured a spike in average height\",\n    x = \"Year\",\n    y = \"Mean Height (feet-inches)\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )\n\n\n\nStandard deviation by year\n\np2 &lt;- df_mean_years |&gt; \n  ggplot(aes(year, sd)) +\n  geom_line() +\n  geom_point() +\n  scale_x_continuous(breaks = seq(1950, 2020, 10)) +\n  labs(\n    title = \"Since 1995, NBA players are becoming more similar in their height\",\n    subtitle = \"The early 1990's were the time with most variability in player heights\",\n    x = \"Year\",\n    y = \"Standard Deviation (inches)\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )\n\n\n\nDistribution by decade\n\np3 &lt;- df_heights_decades |&gt; \n  ggplot(aes(ht_tot_inches, pct)) + \n  geom_line() + \n  geom_vline(data = df_mean_decades, aes(xintercept = mean), linetype = \"dashed\") +\n  facet_wrap(~ decade, ncol = 1, strip.position = \"right\") +\n  scale_x_continuous(breaks = breaks_height, labels = labels_height) +\n  coord_cartesian(xlim = range(breaks_height)) +\n  scale_y_continuous(labels = label_percent()) +\n  labs(\n    title = str_wrap(\n      \"Since the 2000's NBA players are becoming shorter and more similar in their height\",\n      width = 60\n    ),\n    subtitle = \"Average height represented as dashed line\",\n    x = \"Height (feet-inches)\",\n    y = \"% of minutes played\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )"
  },
  {
    "objectID": "posts/2023-09-09-nba-heights/index.html#distribution-by-year-animation",
    "href": "posts/2023-09-09-nba-heights/index.html#distribution-by-year-animation",
    "title": "Height per Minute - Analyzing Height Trends in the NBA",
    "section": "Distribution by year (animation)",
    "text": "Distribution by year (animation)\nFor this last plot, we will unlock the amazing potential of the gganimate package.\n\np4 &lt;- df_heights_years |&gt; \n  left_join(df_mean_years, join_by(year)) |&gt; \n  ggplot(aes(ht_tot_inches, pct)) +\n  geom_line() +\n  scale_y_continuous(labels = label_percent()) +\n  scale_x_continuous(breaks = breaks_height, labels = labels_height) +\n  coord_cartesian(xlim = range(breaks_height)) +\n  transition_time(year) +\n  geom_vline(\n    aes(xintercept = mean),\n    linetype = \"dashed\"\n  ) +\n  labs(\n    title = str_c(\n      \"Year: {frame_time}, Distribution of NBA Players' Height\",\n      \"\\n\",\n      \"(Weighted by Minutes Played)\"\n    ),\n    subtitle = \"Average height represented as dashed line\",\n    x = \"Height (feet-inches)\",\n    y = \"% of minutes played\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  ) +\n    shadow_mark(past = FALSE, future = FALSE)"
  },
  {
    "objectID": "example.html",
    "href": "example.html",
    "title": "",
    "section": "",
    "text": "df_freq_tot &lt;- read_rds(\"df_freq_tot.rds\")\ndf_freq &lt;- read_rds(\"df_freq.rds\")\n\n\nlibrary(ggiraph)\n\nWarning: package 'ggiraph' was built under R version 4.4.3\n\nplot1 &lt;- df_freq |&gt; \n  filter(!(dist %in% c(\"2p\", \"dunk\"))) |&gt; \n  ggplot(aes(year, freq, color = pos, tooltip = pos, data_id = pos)) +\n  geom_line_interactive(linewidth = 1) +\n  facet_wrap(~ dist, scales = \"free_y\") +\n  scale_y_continuous(labels = label_percent()) +\n  scale_color_solarized() +\n  labs(\n    x = \"\",\n    y = \"Shot Frequency\",\n    color = \"Position\",\n    title = \"Shot Frequency by Year, Position and Distance from the Basket\",\n    subtitle = \"How the 3-point revolution affected different positions\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )\n\ngirafe(ggobj = plot1)\n\n\n\n\n\n\ndf_freq |&gt; \n  filter(!(dist %in% c(\"2p\", \"dunk\"))) |&gt; \n  ggplot(aes(year, freq, color = pos)) +\n  geom_line(linewidth = 1) +\n  facet_wrap(~ dist, scales = \"free_y\") +\n  scale_y_continuous(labels = label_percent()) +\n  scale_color_solarized() +\n  labs(\n    x = \"\",\n    y = \"Shot Frequency\",\n    color = \"Position\",\n    title = \"Shot Frequency by Year, Position and Distance from the Basket\",\n    subtitle = \"How the 3-point revolution affected different positions\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )"
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#setup",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#setup",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "Setup",
    "text": "Setup\nLet’s load the relevant packages.\n\n1library(tidyverse)\n2library(rvest)\n3devtools::install_github(\"sfirke/janitor\")\nlibrary(janitor)\n4library(scales)\n5library(ggthemes)\n6library(ggiraph)\n7library(conflicted)\nconflicts_prefer(dplyr::filter())\n\n\n1\n\nThe tidyverse is my favorite data analysis framework, and we’ll be using it for wrangling and visualization.\n\n2\n\nrvest is for web-scraping, that’s how we’re going to get our data.\n\n3\n\nI’m installing the development version of janitor (one of the go-to packages for easy utility functions!) because the row_to_names() function has a specific feature (that I created! Yey!) that isn’t available in the CRAN version yet.\n\n4\n\nscales helps us format our plot axes with percentage labels and other formatting.\n\n5\n\nggthemes provides additional color palettes, including the solarized theme we’ll use.\n\n6\n\nggiraph makes your plots interactive.\n\n7\n\nconflicted lets you be clear and intentional with your namespace clashes.\n\n\n\n\nNow let’s read our data from the web."
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#define-scraping-functions",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#define-scraping-functions",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "Define scraping functions",
    "text": "Define scraping functions\nOur first data source is the seasonal player shooting stats table (2025 for example.). In this table, our unit of analysis is a player, and the table is for a specific season. The columns offer different breakdowns of field goal attempts frequency by distance from the basket, along with field goal percent (accuracy) by distance. The earliest data is from the 1997-1998 season (oh, the nostalgia!).\n\nread_season_dist &lt;- function(year) {\n1  Sys.sleep(4)\n  read_html(str_c(\"https://www.basketball-reference.com/leagues/NBA_\", year, \"_shooting.html\")) |&gt; \n    html_element(\"table\") |&gt; \n    html_table(header = FALSE) |&gt; \n2    row_to_names(1:2) |&gt;\n    clean_names() |&gt; \n3    mutate(across(everything(), parse_guess))\n}\n\n\n1\n\nIn order to avoid being rejected by the Basketball Reference policy, we need to wait between each visit to a page.\n\n2\n\nIn this cool new feature to {janitor} you can elevate multiple rows to act as new column names.\n\n3\n\nAfter fixing the column names, you can guess and parse the column types.\n\n\n\n\nUnfortunately, the shooting stats table is missing a very important value - the total number of shots for a player in a season. Right now we only have the frequency, but not the absolute value. We need this data to correctly calculate the relative weight of each player. Think about it: a player who takes 50 shots per season shouldn’t have the same influence on league-wide trends as someone who takes 1,500 shots. So let’s read another table, where we have this data.\n\nread_season_total &lt;- function(year) {\n  Sys.sleep(4)\n  read_html(str_c(\"https://www.basketball-reference.com/leagues/NBA_\", year, \"_totals.html\")) |&gt; \n    html_element(\"table\") |&gt; \n    html_table() |&gt; \n    clean_names()\n}\n\nNow, let’s perform the web-scraping. We are reading data from 1998 to 2025, covering nearly three decades of NBA evolution.\n\ndf_dist_raw &lt;- tibble(year = 1998:2025) |&gt; \n  mutate(data = map(year, read_season_dist)) |&gt; \n  unnest(data)\n  \ndf_players_raw &lt;-  tibble(year = 1998:2025) |&gt; \n  mutate(data = map(year, read_season_total)) |&gt; \n  unnest(data)\n\nThis process will take several minutes due to our rate limiting (we’re being good citizens of the web!). The map() function applies our scraping function to each year, and unnest() combines all the individual season data frames into two comprehensive datasets."
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#clean-and-join-our-datasets",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#clean-and-join-our-datasets",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "Clean and join our datasets",
    "text": "Clean and join our datasets\nBasketball Reference data comes with some quirks that we need to handle. Players who were traded during a season appear multiple times (once for each team plus a “total” row), and there are various formatting issues we need to address.\n\ndf_players &lt;- df_players_raw |&gt; \n1  distinct(player, year, .keep_all = TRUE) |&gt;\n2  select(year, player, fg, fga)\n\ndf_dist &lt;- df_dist_raw |&gt; \n  distinct(player, year, .keep_all = TRUE) |&gt; \n3  select(!c(rk, awards))\n\n\n1\n\nRemove duplicate rows for players who were traded mid-season, and keep only seasonal stats.\n\n2\n\nWe only need the basic shooting volume data from this table.\n\n3\n\nRemove unnecessary columns like rank and awards.\n\n\n\n\n\ndf &lt;- df_players |&gt; \n  left_join(df_dist, join_by(player, year)) |&gt; \n1  relocate(c(fg, fga), .after = mp)\n\n\n1\n\nMove the shooting volume columns next to minutes played for logical organization."
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#league-wide-trends-by-distance",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#league-wide-trends-by-distance",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "League-wide trends by distance",
    "text": "League-wide trends by distance\nLet’s start with the big picture - how has shot selection changed across the entire league?\n\nplot_total &lt;- df_freq_tot |&gt; \n1  filter(!(dist %in% c(\"2p\", \"dunk\"))) |&gt;\n2  mutate(dist = fct_reorder2(dist, year, freq)) |&gt;\n  ggplot(aes(year, freq, color = dist, tooltip = percent(freq, accuracy = 0.1), data_id = dist)) +\n  geom_line_interactive(linewidth = 1) + \n  scale_y_continuous(labels = label_percent()) +\n  scale_color_solarized() +\n  labs(\n    x = \"\",\n    y = \"Shot Frequency\",\n    color = \"Distance\",\n    title = \"Shot Frequency by Year and Distance from the Basket\",\n    subtitle = \"The 3-point revolution meets the mid-range exodus\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )\n\ngirafe(ggobj = plot_total)\n\n\n1\n\nRemove aggregate categories to focus on specific distance ranges.\n\n2\n\nReorder the legend based on the final year values for better readability."
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#position-specific-trends",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#position-specific-trends",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "Position-specific trends",
    "text": "Position-specific trends\nNow let’s see how different positions have adapted to these league-wide changes. This is where things get really interesting!\n\nplot_position &lt;- df_freq |&gt; \n  filter(!(dist %in% c(\"2p\", \"dunk\"))) |&gt; \n  ggplot(aes(year, freq, color = pos, tooltip = percent(freq, accuracy = 0.1), data_id = pos)) +\n  geom_line_interactive(linewidth = 1) +\n1  facet_wrap(~ dist, scales = \"free_y\") +\n  scale_y_continuous(labels = label_percent()) +\n  scale_color_solarized() +\n  labs(\n    x = \"\",\n    y = \"Shot Frequency\",\n    color = \"Position\",\n    title = \"Shot Frequency by Year, Position and Distance from the Basket\",\n    subtitle = \"How the 3-point revolution affected different positions\",\n    caption = \"Data: basketball-reference.com. Analysis: Matan Hakim.\"\n  )\n\ngirafe(ggobj = plot_position)\n\n\n1\n\nUse free y-scales to better show the trends within each distance range."
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#the-death-of-the-mid-range-shot",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#the-death-of-the-mid-range-shot",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "The Death of the Mid-Range Shot",
    "text": "The Death of the Mid-Range Shot\nLooking at our league-wide visualization, we can see the famous “3-point revolution” in action, but the real story is more nuanced than the typical narrative suggests. Yes, 3-pointers have exploded from around 16% in 1998 to over 42% in 2025. But the most dramatic change is actually the systematic elimination of mid-range shots, particularly in the 16-foot to 3-point line range, which has plummeted from around 24% to just 4% over the same period.\nThis makes perfect basketball sense. A 20-foot jump shot is worth the same 2 points as a layup, but it’s much harder to make. Meanwhile, step back just a few feet and that same shot becomes worth 3 points. The math is brutal for mid-range shots.\nInterestingly enough, the 3-10 foot shot is alive and well, even showing an increase in recent years from about 13% to 17%. This reflects the uptick in “floater” type shots, tear-drops, push-shots, “the giant slayer”, and other shots taken mostly by perimeter players trying to shoot above rim-protecting big men."
  },
  {
    "objectID": "posts/2025-02-08-nba-shot-selection/index.html#position-specific-adaptations",
    "href": "posts/2025-02-08-nba-shot-selection/index.html#position-specific-adaptations",
    "title": "Beyond the 3-Point Revolution: A Deep Dive into NBA Shot Selection by Position and Distance",
    "section": "Position-Specific Adaptations",
    "text": "Position-Specific Adaptations\nWhen we break down the trends by position and distance, we see fascinating differences in how players have adapted. Each distance range tells its own story:\n0-3 feet: This shot distance serves as the main differentiator between positions - the bigger the position, the more shots come from the rim area. What’s particularly striking is how the gaps between positions have widened over time. Centers now take nearly 45% of their shots at the rim, while point guards take only about 18%. This reinforces the growing divide between “big-men” and “wings” and “smalls” - a clear manifestation of the split between perimeter and interior players.\n3-10 feet: Interestingly, and as mentioned above, this shot distance has seen a rise in popularity, especially among guards and small forwards. The position hierarchy remains similar to rim shots, with centers leading the way, but the trends show this becoming a more valuable weapon for perimeter players navigating crowded paint areas.\n10-16 feet: Here’s where things get fascinating. The short mid-range has actually become a more common weapon in the point guard’s toolbox, even as other positions have abandoned it. The rise in popularity of this shot distance among PGs, in contrast to other positions’ trends, might be attributed to the evolution of the pick-and-roll game and the need for shorter players to create effective counters. Think of “snaking” the pick-and-roll, a move point guards like Chris Paul and TJ McConnell have perfected.\n16 feet-3pt: This distance plot is the poster child for the death of the mid-range. Not a single position has shown willingness to maintain meaningful volume shooting from this range, as the 3-point revolution has reached its logical conclusion. This is the only shot distance where all five positions converge to the same trend - universal abandonment.\n3-point: The breakdown by position reveals that “the 3-point revolution” is actually four distinct sub-revolutions:\n\n“The Long Rise” - Ever since the inception of the 3-point shot, its frequency has been climbing, especially among guards and forwards. This trend continued almost without interruption from 1998 to 2013.\n“The Power Forward Revolution” - Around 2013, power forwards’ 3-point frequency saw massive increases. In 2012, small forwards shot 3-pointers three times as much as power forwards, but by 2017 they had evened out. This represents one of the most dramatic positional transformations in NBA history.\n“The Centers Revolution” - Between 2015 and 2020, centers more than quadrupled their 3-point shot frequency, going from barely 3% to over 15%. This trend fundamentally changed what it means to be a center in the modern NBA.\n“The Latest Surge” - The 2024-25 season has seen a rise in 3-point frequency among almost all positions. Whether this upward trend continues remains to be seen, but it suggests the revolution isn’t over yet."
  }
]